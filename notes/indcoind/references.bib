@article{owens_reppy_turon_2009,
  title={Regular-expression derivatives re-examined},
  volume={19}, DOI={10.1017/S0956796808007090},
  number={2},
  journal={Journal of Functional Programming},
  publisher={Cambridge University Press},
  author={Owens, Scott and Reppy, John and Turon, Aaron},
  year={2009},
  pages={173–190}
}

@inproceedings{berger91,
  author={Berger, U. and Schwichtenberg, H.},
  booktitle={[1991] Proceedings Sixth Annual IEEE Symposium on Logic in Computer Science},
  title={An inverse of the evaluation functional for typed lambda -calculus},
  year={1991},
  volume={},
  number={},
  pages={203-211},
  doi={10.1109/LICS.1991.151645}
}

@inproceedings{keller:inria-00520606,
  TITLE = {{Hereditary Substitutions for Simple Types, Formalized}},
  AUTHOR = {Keller, Chantal and Altenkirch, Thorsten},
  URL = {https://hal.inria.fr/inria-00520606},
  SERIES = {Proceedings of the Mathematically Structured Functional Programming workshop},
  YEAR = {2010},
  KEYWORDS = {Hereditary substitutions Type Theory normalizer decidability of beta-eta-equality},
  PDF = {https://hal.inria.fr/inria-00520606/file/msfp10.pdf},
  HAL_ID = {inria-00520606},
  HAL_VERSION = {v1},
}

@article{click95,
  author = {Click, Cliff and Paleczny, Michael},
  title = {A Simple Graph-Based Intermediate Representation},
  year = {1995},
  issue_date = {March 1993},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {30},
  number = {3},
  issn = {0362-1340},
  url = {https://doi.org/10.1145/202530.202534},
  doi = {10.1145/202530.202534},
  abstract = {We present a graph-based intermediate representation (IR) with simple semantics and a low-memory-cost C++ implementation. The IR uses a directed graph with labeled vertices and ordered inputs but unordered outputs. Vertices are labeled with opcodes, edges are unlabeled. We represent the CFG and basic blocks with the same vertex and edge structures. Each opcode is defined by a C++ class that encapsulates opcode-specific data and behavior. We use inheritance to abstract common opcode behavior, allowing new opcodes to be easily defined from old ones. The resulting IR is simple, fast and easy to use.},
  journal = {SIGPLAN Not.},
  month = mar,
  pages = {35–49},
  numpages = {15}
}


@article{brzozowski64,
  author = {Brzozowski, Janusz A.},
  title = {Derivatives of Regular Expressions},
  year = {1964},
  issue_date = {Oct. 1964},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {11},
  number = {4},
  issn = {0004-5411},
  url = {https://doi.org/10.1145/321239.321249},
  doi = {10.1145/321239.321249},
  journal = {J. ACM},
  month = oct,
  pages = {481–494},
  numpages = {14}
}

@article{pfenning88,
  author = {Pfenning, F. and Elliott, C.},
  title = {Higher-Order Abstract Syntax},
  year = {1988},
  issue_date = {July 1988},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {23},
  number = {7},
  issn = {0362-1340},
  url = {https://doi.org/10.1145/960116.54010},
  doi = {10.1145/960116.54010},
  abstract = {We describe motivation, design, use, and implementation of higher-order abstract syntax as a central representation for programs, formulas, rules, and other syntactic objects in program manipulation and other formal systems where matching and substitution or unification are central operations. Higher-order abstract syntax incorporates name binding information in a uniform and language generic way. Thus it acts as a powerful link integrating diverse tools in such formal environments. We have implemented higher-order abstract syntax, a supporting matching and unification algorithm, and some clients in Common Lisp in the framework of the Ergo project at Carnegie Mellon University.},
  journal = {SIGPLAN Not.},
  month = jun,
  pages = {199–208},
  numpages = {10}
}

@article{BruijnIndex2021,
  title = {De {{Bruijn}} Index},
  year = {2021},
  month = aug,
  journal = {Wikipedia},
  copyright = {Creative Commons Attribution-ShareAlike License},
  annotation = {Page Version ID: 1039440742},
  url = {https://en.wikipedia.org/wiki/De_Bruijn_index}
}

@article{NbEwiki2021,
  title = {Normalization by evaluation},
  year = {2021},
  month = aug,
  journal = {Wikipedia},
  copyright = {Creative Commons Attribution-ShareAlike License},
  annotation = {Page Version ID: 1039440742},
  url = {https://en.wikipedia.org/wiki/Normalisation_by_evaluation}
}

@article{BoxesGoBananas2003,
  author = {Washburn, Geoffrey and Weirich, Stephanie},
  title = {Boxes Go Bananas: Encoding Higher-Order Abstract Syntax with Parametric Polymorphism},
  year = {2003},
  issue_date = {September 2003},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {38},
  number = {9},
  issn = {0362-1340},
  url = {https://doi.org/10.1145/944746.944728},
  doi = {10.1145/944746.944728},
  month = aug,
  pages = {249–262},
  numpages = {14},
}

@InProceedings{FinallyTagless2007,
  author="Carette, Jacques
  and Kiselyov, Oleg
  and Shan, Chung-chieh",
  editor="Shao, Zhong",
  title="Finally Tagless, Partially Evaluated",
  booktitle="Programming Languages and Systems",
  year="2007",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="222--238",
  abstract="We have built the first family of tagless interpretations for a higher-order typed object language in a typed metalanguage (Haskell or ML) that require no dependent types, generalized algebraic data types, or postprocessing to eliminate tags. The statically type-preserving interpretations include an evaluator, a compiler (or staged evaluator), a partial evaluator, and call-by-name and call-by-value CPS transformers.",
  isbn="978-3-540-76637-7"
}

@article{NbELindley2016slides,
  author          = {Lindley, Sam},
  title           = {Normalization by evaluation},
  url             = {http://homepages.inf.ed.ac.uk/slindley/nbe/nbe-cambridge2016.pdf},
  year            = {2016}
}

@article{AndrasYoutube,
  author          = {Kovács, András},
  title           = {Type theory elaboration},
  url             = {https://www.youtube.com/watch?v=trecCoxYbgM&list=PL2ZpyLROj5FOt99f_KCxARvd1hDqKns5b}
}